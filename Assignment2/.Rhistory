# Read in Table
dat = read.table("./chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
# Read in Table
dat = read.table("./chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("./chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("./chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
# Source:
#   Chocolate Consumption, Cognitive Function, and Nobel Laureates, Franz H. Messerli, M.D. N Engl J Med 2012; 367:1562-1564October 18, 2012DOI: 10.1056/NEJMon1211064
# http://stats.oecd.org/
"abbrev" "country" "nobel" "choco" "expend"
"3"  "SZ" "Switzerland" 24.1 11.9 22.88
# Source:
#   Chocolate Consumption, Cognitive Function, and Nobel Laureates, Franz H. Messerli, M.D. N Engl J Med 2012; 367:1562-1564October 18, 2012DOI: 10.1056/NEJMon1211064
# http://stats.oecd.org/
"abbrev" "country" "nobel" "choco" "expend"
"3"  "SZ" "Switzerland" 24.1 11.9 22.88
"5"  "SW" "Sweden" 16.361 4.4 20.82
"8"  "GE" "Germany" 11.03 9.1 16.72
"11" "NO" "Norway" 9.596 9.2 18.84
"15" "FR" "France" 5.745 4.9 15.37
"16" "FN" "Finland" 5.451 6.2 18.00
"17" "BE" "Belgium" 5.31 9.1 15.42
"19" "CA" "Canada" 5.008 3.9 23.23
"21" "IR" "Ireland" 4.241 8.8 16.10
"22" "AU" "Australia" 4.172 4.8 16.27
"27" "IT" "Italy" 2.174 3.5 9.99
"28" "JP" "Japan" 1.738 1.8 16.45
"35" "PR" "Portugal" 0.966 2 9.64
"38" "SP" "Spain" 0.434 1.6 13.17
"47" "CH" "China" 0.058 0.7 NA
"49" "BZ" "Brazil" 0.048 1  NA
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("chocoTable.r");
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("chocoTable.r", header = TRUE);
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("chocoTable.r", header = TRUE);
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
# Read in Table
dat = read.table("chocoTable.r", header = TRUE);
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
dat = read.table("chocoTable.r", header = TRUE);
# Read in Table
dat = read.table("Desktop/chocoTable.r", header = TRUE);
# Read in Table
dat = read.table("Desktop/chocoTable.r", header = TRUE);
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
mu   = 0;
sigma= 10;
reps = 1000;
sampleSize    = c(10,25,50,100);
meanEstimates = matrix(0,reps,length(sampleSize));
for( i in 1:reps ){ # Generate 1000 sample means
for( j in 1:length(sampleSize) ){ # Generate sample means for different sample sizes
# Generate Random Data
xx   = rnorm( sampleSize[j], mu,sigma );
# compute sample mean
xbar = mean(xx);
meanEstimates[i,j] = xbar;
}
}
# Compute variances of sample means
varEstimates = apply( meanEstimates, 2, var );
results = rbind( sampleSize, signif( varEstimates, 4));
row.names(results) <- c("Sample Size","Var Estimate");
print(results)
plot(
sampleSize, varEstimates, type='b', col='blue',
xlab='Sample Size',ylab='Estimated variance of sample mean',las=1
)
# Read in Table
dat = read.table("Desktop/chocoTable.r", header = TRUE);
# Look at the data
print(dat);
# Calculate the correlation
print( paste( "Correlation", signif( cor( dat$choco, dat$nobel ), 4)));
# Fit a simple linear regression to the data
lmDat = lm( nobel ~ choco, dat=dat );
plot(
dat$choco, dat$nobel, las=1, ylim=c(-1,max(dat$nobel)),
xlab="Chocolate Consumption (kg per capita)", ylab="Nobel prizes per 10 million"
);
text( x=dat$choco, y=dat$nobel, labels=dat$abbrev, pos=1,cex=0.7 );
abline(lmDat,col='blue',lwd=2);
# Summary of Linear Regression
summary( lmDat )
cat CH
cat("CH")
cat(CH)
cat(ch)
cat(ch)
cat("CH")
cat(3)
View(dat)
View(results)
View(results)
View(dat)
View(lmDat)
help()
init <- nil
init <- NULL
init
value
value = [3, 4]
value = c(3, 4)
valkue
value
init
x = c(1, 5)
x
length(x)
init
length(init)
init = c(1,2,3,4)
init
ls()
rm(*)
rm())
rm()
ls()
?matrix
x= matrix(data = (1,2,3,4), nrow = 2, ncol = 2)
x= matrix(data = (1,2,3,4) nrow = 2, ncol = 2)
x= matrix(data = c(1,2,3,4) nrow = 2, ncol = 2)
x= matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
x= matrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3)
x
x= matrix(data = c(1,2,3,4, 5,6), nrow = 3, ncol = 2)
x
ls()
ls(results)
ls(data=results)
?rnorm
?cor
cor(x, init)
cor(3,4)
cigs.d
Auto = read.table("cigs.d", header = TRUE, na.strings = "?", fill = TRUE)
View(cigs)
cigs
mtcars
cigs
setwd("Desktop/stat 441/Assignment2/")
Cereal.data = read.table("cerealbrands.data", header = TRUE, na.strings = "?", fill = TRUE)
Cereal <- as.matrix(Cereal.data)
library(MASS)
# convert the origin datasets into dist
cerealDist <- dist(Cereal)
# max dimension is 14
i = 1
while (i <= 14){
output = isoMDS(cerealDist, k = i)
# make sure there is less than 1% stress
if (output$stress > 1){
i <- i + 1
} else{
print(paste0("selected dimension: ", i))
break
}
}
# the selected dimension is 4d in this case
# plot cmd scaling
data <- cmdscale(dist(Cereal), k = i, eig = T)
plot(data$points, type = 'n', xlab = "pc1", ylab = "pc2")
text(data$points, labels = row.names(Cereal.data), cex = 0.5)
# transpose
# Pre processing
Cereal.slice = (Cereal.data[, 3:14])
Cereal.cor <- cor(Cereal.slice)
Cereal.t.dist <- dist(cor(Cereal.cor))
Cereal.t.MDS <- cmdscale(Cereal.t.dist, k = 2, eig = T)
plot(Cereal.t.MDS$points, type = 'n', xlab = "pc1", ylab = "pc2")
text(Cereal.t.MDS$points, labels = names(Cereal.data), cex = 0.5)
eqscplot()
plot(data$points[, 1], xlab = "x", ylab = "PC1 Scaling")
eqscplot()
plot(data$points[, 2], xlab = "x", ylab = "PC2 Scaling")
eqscplot()
plot(data$points[, 3], xlab = "x", ylab = "PC3 Scaling")
eqscplot()
plot(data$points[, 4], xlab = "x", ylab = "PC4 Scaling")
# MDS scaling
eqscplot()
plot(output$points[, 1], xlab = "x", ylab = "PC1 Scaling")
eqscplot()
plot(output$points[, 2], xlab = "x", ylab = "PC2 Scaling")
eqscplot()
plot(output$points[, 3], xlab = "x", ylab = "PC3 Scaling")
eqscplot()
plot(output$points[, 4], xlab = "x", ylab = "PC4 Scaling")
# biplot
eqscplot()
biplot(prcomp(output$points, scale = T))
Cereal.t.MDS
plot(Cereal.data)
