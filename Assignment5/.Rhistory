anova(suicide_glm, test="Chisq")
require(CCA)
require(ca)
require(data.table)
require(MASS)
require(classifly)
require(ggplot2)
require(FactoMineR)
require(factoextra)
require(vegan)
require(vcd)
# Source: https://www.stat.cmu.edu/~ryantibs/datamining/lectures/10-cor1.R
as.indmat = function(z) {
z = as.factor(z)
l = levels(z)
b = as.numeric(z==rep(l,each=length(z)))
return(matrix(b,length(z)))
}
# Variables: Sex, Age, POISON, GAS, HANG, DROWN, GUN, JUMP
#suicide = read.table("suicide.data", header=TRUE, stringsAsFactors = FALSE)
suicide = read.table("suicide.data", header=TRUE)
# Canonical correlation analysis
# "Are gender and age correlated with
# suicide?"
# Compare sex versus suicide
y = as.indmat(suicide[,1])
#vars1 = as.data.frame(sapply(vars1, as.numeric))
x = as.matrix(suicide[,3:8])
#cc1 = cc(vars1, vars2)
cc = cancor(x, y, ycenter=FALSE)
alpha = cc$xcoef
beta = cc$ycoef
xvars = x %*% alpha
yvars = y %*% beta
cols = c("red", "blue")
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
text(xvars[,1:2], labels=suicide[,2])
# Bottom line is male, top line is female
# In other words, there is a clear distinction between
# groups.
vars1 = sapply(suicide[,1:2], as.numeric)
vars2 = suicide[,3:8]
cc1 = cc(vars1, vars2)
# RICK: I CANT SEND THE ACTUAL CODE HERE COS FB SUX,
# BUT REPLACE .cp WITH .cc
plt.cp(cc1, var.label = TRUE, ind.names = suicide[,2])
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct = F))
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct = F))
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct = F))
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct = F))
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(  F))
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct = False))
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors(distinct))
?plot
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', col = "red")
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', col = "black")
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', color = "black")
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2', colors = "black")
setwd("./Desktop/stat 441/Assignment5/")
divorce.data = read.table("divorce.data", header=T,na.strings=c(""))
# get data out
divorce.data1 = divorce.data[, c(1, 4, 6, 7)]
divorce.data2 = divorce.data[, c(2, 3, 5)]
# canonical correlation
cancor.result = cancor(divorce.data1, divorce.data2)
divorce.x1 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 1]
divorce.x2 = as.matrix(divorce.data1) %*% cancor.result$xcoef[, 2]
divorce.y1 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 1]
divorce.y2 = as.matrix(divorce.data2) %*% cancor.result$ycoef[, 2]
plot(divorce.x1, divorce.y1, xlab = 'Group1', ylab = 'Group2')
plot(divorce.x2, divorce.y2, xlab = 'Group1', ylab = 'Group2')
library(vegan)
cc3 <- cca(divorce.data1, divorce.data2)
plot(cc3, scaling = 0, xlab = 'Group1', ylab = 'Group2')
setwd("./Desktop/stat 441/Assignment5/")
library(MASS)
suicide.data = read.table("suicide.data", header=T,na.strings=c(""))
suicide.poison = xtabs(POISON~Sex+Age, data = suicide.data)
suicide.gas = xtabs(GAS~Sex+Age, data = suicide.data)
suicide.hang = xtabs(HANG~Sex+Age, data = suicide.data)
suicide.drown = xtabs(DROWN~Sex+Age, data = suicide.data)
suicide.gun = xtabs(GUN~Sex+Age, data= suicide.data)
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex+Age, data = suicide.data)
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide'))
mosaicplot(suicide.gas, color=c("lightgray","darkgray"), title(main='Gas suicide'))
mosaicplot(suicide.hang, color=c("lightgray","darkgray"), title(main='Hang Suicide'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide'))
mosaicplot(suicide.gun, color=c("lightgray","darkgray"), title(main='Gun suicide'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide'))
canonical_result = corresp(suicide)
plot(canonical_result)
xtabs(GUN~Sex+Age, data= suicide.data)
corresp(suicide)
suicide
as.data.frame(suicide.data)
class(suicide.data)
table(suicide.data)
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
# log linear model
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex*Age, family = poisson, data = suicide.data)
anova(suicide_glm, test="Chisq")
test = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex, data = suicide.data)
test = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex, data = suicide.data)
mosaicplot(test, color=c("lightgray","darkgray"), title(main='Suicide freq'))
suicide
suicide.pred = predict(suicide_glm, type = "response")
suicide.pred
xtabs(suicide.pred.~, cbind(suicide.data[, 1:2]))
xtabs(suicide.pred~., cbind(suicide.data[, 1:2]))
xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex*Age, family = poisson, data = suicide.data)
anova(suicide_glm, test="Chisq")
suicide.pred = predict(suicide_glm, type = "response")
glm_suicide = xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
mosaicplot(glm_suicide, color=c("lightgray","darkgray"), title(main='glm predict Suicide freq'))
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex+Age, family = poisson, data = suicide.data)
suicide.pred = predict(suicide_glm, type = "response")
glm_suicide = xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
glm_res = residuals(suicide_glm, type = "response")
xtab(glm_res~., cbind(suicide.data[,1:2], glm_res))
xtabs(glm_res~., cbind(suicide.data[,1:2], glm_res))
mosaicplot(suicide_res, shade=T, margin=list(1,2))
suicide_res = xtabs(glm_res~., cbind(suicide.data[,1:2], glm_res))
mosaicplot(suicide_res, shade=T, margin=list(1,2))
mosaicplot(suicide.gas, color=c("lightgray","darkgray"), title(main='Gas suicide freq'))
mosaicplot(suicide.gun, color=c("lightgray","darkgray"), title(main='Gun suicide freq'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
mosaicplot(suicide.hang, color=c("lightgray","darkgray"), title(main='Hang Suicide freq'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
xtabs(DROWN~Sex+Age, data = suicide.data)
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide freq'))
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Age, data = suicide.data)
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex, data = suicide.data)
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex+Age, data = suicide.data)
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
canonical_result = corresp(suicide)
plot(canonical_result)
corresp(suicide)
suicide
test= xtabs(POISON+GAS+HANG+DROWN+GUN~Age, data = suicide.data)
test= xtabs(POISON+GAS+HANG+DROWN+GUN~Age, data = suicide.data)
test_cro = corresp(test)
test= xtabs(POISON+GAS+HANG+DROWN+GUN~Age, data = suicide.data)
test_cro = corresp(test)
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide freq'))
canonical_result = corresp(suicide)
plot(canonical_result)
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide freq'))
mosaicplot(suicide.gas, color=c("lightgray","darkgray"), title(main='Gas suicide freq'))
mosaicplot(suicide.hang, color=c("lightgray","darkgray"), title(main='Hang Suicide freq'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
mosaicplot(suicide.gun, color=c("lightgray","darkgray"), title(main='Gun suicide freq'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
suicide.drown
canonical_result = corresp(suicide)
plot(canonical_result)
require(CCA)
require(ca)
require(data.table)
require(MASS)
require(classifly)
require(ggplot2)
require(FactoMineR)
require(factoextra)
require(vegan)
require(vcd)
# Source: https://www.stat.cmu.edu/~ryantibs/datamining/lectures/10-cor1.R
as.indmat = function(z) {
z = as.factor(z)
l = levels(z)
b = as.numeric(z==rep(l,each=length(z)))
return(matrix(b,length(z)))
}
# Variables: Sex, Age, POISON, GAS, HANG, DROWN, GUN, JUMP
#suicide = read.table("suicide.data", header=TRUE, stringsAsFactors = FALSE)
suicide = read.table("suicide.data", header=TRUE)
# Canonical correlation analysis
# "Are gender and age correlated with
# suicide?"
# Compare sex versus suicide
y = as.indmat(suicide[,1])
#vars1 = as.data.frame(sapply(vars1, as.numeric))
x = as.matrix(suicide[,3:8])
#cc1 = cc(vars1, vars2)
cc = cancor(x, y, ycenter=FALSE)
alpha = cc$xcoef
beta = cc$ycoef
xvars = x %*% alpha
yvars = y %*% beta
cols = c("red", "blue")
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
text(xvars[,1:2], labels=suicide[,2])
# Bottom line is male, top line is female
# In other words, there is a clear distinction between
# groups.
vars1 = sapply(suicide[,1:2], as.numeric)
vars2 = suicide[,3:8]
cc1 = cc(vars1, vars2)
# RICK: I CANT SEND THE ACTUAL CODE HERE COS FB SUX,
# BUT REPLACE .cp WITH .cc
plt.cp(cc1, var.label = TRUE, ind.names = suicide[,2])
# Correspondence analysis
# "Does each group (gender & age)
# have any specific preference in
# regards to suicide method?"
# Join groups for presentation
suicide_gr = within(suicide, {sex_age = paste(Age, Sex)})
suicide_gr = suicide_gr[,-(1:2)]
rownames(suicide_gr) = suicide_gr[,7]
suicide_gr = suicide_gr[,-7]
ca1 = CA(suicide_gr, graph=FALSE)
# Join groups for presentation
suicide_gr = within(suicide, {sex_age = paste(Age, Sex)})
suicide_gr = suicide_gr[,-(1:2)]
rownames(suicide_gr) = suicide_gr[,7]
suicide_gr = suicide_gr[,-7]
ca1 = CA(suicide_gr, graph=FALSE)
# Join groups for presentation
suicide_gr = within(suicide, {sex_age = paste(Age, Sex)})
suicide_gr = suicide_gr[,-(1:2)]
rownames(suicide_gr) = suicide_gr[,7]
suicide_gr = suicide_gr[,-7]
ca1 = CA(suicide_gr, graph=FALSE)
# Bottom line is male, top line is female
# In other words, there is a clear distinction between
# groups.
vars1 = sapply(suicide[,1:2], as.numeric)
vars2 = suicide[,3:8]
cc1 = cc(vars1, vars2)
# RICK: I CANT SEND THE ACTUAL CODE HERE COS FB SUX,
# BUT REPLACE .cp WITH .cc
plt.cp(cc1, var.label = TRUE, ind.names = suicide[,2])
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
text(xvars[,1:2], labels=suicide[,2])
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
text(xvars[,1:2], labels=suicide[,2])
suicide_gr = within(suicide, {sex_age = paste(Age, Sex)})
suicide_gr = suicide_gr[,-(1:2)]
rownames(suicide_gr) = suicide_gr[,7]
suicide_gr = suicide_gr[,-7]
ca1 = CA(suicide_gr, graph=FALSE)
suicide_gr
ca1
suicide_gr = within(suicide, {sex_age = paste(Age, Sex)})
suicide_gr = suicide_gr[,-(1:2)]
rownames(suicide_gr) = suicide_gr[,7]
suicide_gr = suicide_gr[,-7]
ca1 = CA(suicide_gr, graph=FALSE)
plt.cc(cc1, var.label = TRUE, ind.names = suicide[,2])
vars1 = sapply(suicide[,1:2], as.numeric)
vars2 = suicide[,3:8]
cc1 = cc(vars1, vars2)
# RICK: I CANT SEND THE ACTUAL CODE HERE COS FB SUX,
# BUT REPLACE .cp WITH .cc
plt.cc(cc1, var.label = TRUE, ind.names = suicide[,2])
barplot(cc$cor,
xlab = "Dimension",
ylab = "Canonical correlations",
main="Scree plot of canonical correlations",
names.arg = 1:2, ylim = c(0,1))
plot(xvars[,1:2],col=cols[suicide[,1]],
xlab="First canonical x variate",
ylab="Second canonical x variate",
main="Units plotted on first and second canonical variate")
text(xvars[,1:2], labels=suicide[,2])
canonical_result = corresp(suicide)
plot(canonical_result)
cannonical_result
setwd("./Desktop/stat 441/Assignment5/")
library(MASS)
suicide.data = read.table("suicide.data", header=T,na.strings=c(""))
suicide.poison = xtabs(POISON~Sex+Age, data = suicide.data)
suicide.gas = xtabs(GAS~Sex+Age, data = suicide.data)
suicide.hang = xtabs(HANG~Sex+Age, data = suicide.data)
suicide.drown = xtabs(DROWN~Sex+Age, data = suicide.data)
suicide.gun = xtabs(GUN~Sex+Age, data= suicide.data)
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex+Age, data = suicide.data)
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide freq'))
mosaicplot(suicide.gas, color=c("lightgray","darkgray"), title(main='Gas suicide freq'))
mosaicplot(suicide.hang, color=c("lightgray","darkgray"), title(main='Hang Suicide freq'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
mosaicplot(suicide.gun, color=c("lightgray","darkgray"), title(main='Gun suicide freq'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
canonical_result = corresp(suicide)
plot(canonical_result)
# log linear model
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex*Age, family = poisson, data = suicide.data)
anova(suicide_glm, test="Chisq")
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex+Age, family = poisson, data = suicide.data)
suicide.pred = predict(suicide_glm, type = "response")
glm_suicide = xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
# residual
glm_res = residuals(suicide_glm, type = "response")
suicide_res = xtabs(glm_res~., cbind(suicide.data[,1:2], glm_res))
setwd("./Desktop/stat 441/Assignment5/")
library(MASS)
suicide.data = read.table("suicide.data", header=T,na.strings=c(""))
suicide.poison = xtabs(POISON~Sex+Age, data = suicide.data)
suicide.gas = xtabs(GAS~Sex+Age, data = suicide.data)
suicide.hang = xtabs(HANG~Sex+Age, data = suicide.data)
suicide.drown = xtabs(DROWN~Sex+Age, data = suicide.data)
suicide.gun = xtabs(GUN~Sex+Age, data= suicide.data)
suicide = xtabs(POISON+GAS+HANG+DROWN+GUN~Sex+Age, data = suicide.data)
mosaicplot(suicide.poison, color=c("lightgray","darkgray"), title(main = 'Poison suicide freq'))
mosaicplot(suicide.gas, color=c("lightgray","darkgray"), title(main='Gas suicide freq'))
mosaicplot(suicide.hang, color=c("lightgray","darkgray"), title(main='Hang Suicide freq'))
mosaicplot(suicide.drown, color=c("lightgray","darkgray"), title(main='Drown Suicide freq'))
mosaicplot(suicide.gun, color=c("lightgray","darkgray"), title(main='Gun suicide freq'))
mosaicplot(suicide, color=c("lightgray","darkgray"), title(main='Suicide freq'))
canonical_result = corresp(suicide)
plot(canonical_result)
# log linear model
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex*Age, family = poisson, data = suicide.data)
anova(suicide_glm, test="Chisq")
suicide_glm = glm(POISON+GAS+HANG+DROWN+GUN~Sex+Age, family = poisson, data = suicide.data)
suicide.pred = predict(suicide_glm, type = "response")
glm_suicide = xtabs(suicide.pred~., cbind(suicide.data[, 1:2], suicide.pred))
# residual
glm_res = residuals(suicide_glm, type = "response")
suicide_res = xtabs(glm_res~., cbind(suicide.data[,1:2], glm_res))
cannonical_result
corresp(suicide)
corresp(suicide.gas)
test = corresp(suicide.gas)
plot(test)
suicide_canonical_result = corresp(suicide)
suicide_poison_cannonical_result = corresp(suicide.poison)
suicide_gas_cannonical_result = corresp(suicide.gas)
suicide.hang_cannonical_result = corresp(suicide.hang)
plot(suicide.hang_cannonical_result)
plot(suicide.hang_cannonical_result)
plot(suicide.hang_cannonical_result)
plot(suicide_gas_cannonical_result)
plot(suicide_poison_cannonical_result)
plot(suicide_canonical_result)
plot(suicide.hang_cannonical_result)
plot(suicide_poison_cannonical_result)
plot(suicide_poison_cannonical_result, title("canonical coorelation of poison suicide"))
plot(suicide_poison_cannonical_result, title("canonical coorelation of poison suicide"))
plot(suicide_poison_cannonical_result, title(main ="canonical coorelation of poison suicide"))
plot(suicide_poison_cannonical_result)
plot(suicide_poison_cannonical_result)
text('poison suicide cannonical analysis')
plot(suicide_poison_cannonical_result, title(sub="s"))
plot(suicide_poison_cannonical_result, title(main="s"))
plot(suicide_poison_cannonical_result)
suicide.drown_cannonical_result = corresp(suicide.drown)
plot(suicide.drown_cannonical_result)
plot(suicide.hang_cannonical_result)
plot(suicide_gas_cannonical_result)
suicide.hang_cannonical_result = corresp(suicide.hang)
suicide.drown_cannonical_result = corresp(suicide.drown)
suicide_poison_cannonical_result = corresp(suicide.poison)
suicide_canonical_result = corresp(suicide)
plot(suicide_gas_cannonical_result)
plot(suicide_poison_cannonical_result)
plot(suicide_canonical_result)
plot(suicide.drown_cannonical_result)
corresp(suicide.drown)
plot(suicide_canonical_result); title("suicide cannonical analysis")
plot(suicide_poison_cannonical_result); title("poison suicide cannonical analysis")
suicide.drown_cannonical_result = corresp(suicide.drown)
plot(suicide_canonical_result); title("suicide canonical analysis")
plot(suicide.drown_cannonical_result); title("drown suicide canonical analysis")
plot(suicide_poison_cannonical_result); title("poison suicide canonical analysis")
plot(suicide_canonical_result); title("suicide canonical analysis")
plot(suicide.drown_cannonical_result); title("drown suicide canonical analysis")
